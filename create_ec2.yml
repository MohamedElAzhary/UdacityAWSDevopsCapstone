Resources:
    NewEC2:
        Type: AWS::EC2::Instance
        Properties: 
            AvailabilityZone:
                Fn::Select: 
                    - 0
                    - Fn::GetAZs: "us-west-2"
            DisableApiTermination: "false"
            ImageId: "ami-0800fc0fa715fdcfe"
            BlockDeviceMappings: 
                    -   DeviceName: "/dev/xvda"
                        Ebs:
                            VolumeSize: 30
                            DeleteOnTermination: "true"
                            VolumeType: "gp2"
            InstanceType: "t2.large"
            KeyName: "udacity"
            NetworkInterfaces: 
                -   AssociatePublicIpAddress: "true"
                    DeleteOnTermination: "true"
                    DeviceIndex: "0"
                    GroupSet: 
                        - !ImportValue P5Stack-EC2SecGroup
                    SubnetId:   !ImportValue P5Stack-PublicSubnet1
            UserData:   # User data
                    !Base64 |
                        #!/bin/bash
                        touch /home/ec2-user/came.txt;
                        wget -P /home/ec2-user/ https://github.com/MohamedElAzhary/UdacityAWSDevopsCapstone/archive/refs/heads/main.zip;
                        unzip /home/ec2-user/main.zip; 
                        rm /home/ec2-user/main.zip;
                        chmod +rwx /home/ec2-user/UdacityAWSDevopsCapstone-main/*;
                        cd /home/ec2-user/UdacityAWSDevopsCapstone-main;
                        bash InitiallizeEC2.sh
                        su ec2-user bash -c "bash ~/UdacityAWSDevopsCapstone-main/installDocker.sh";
            Tags: 
                -   Key: "Name"
                    Value: "Green"


Outputs:
    EC2ID:
        Description: EC2 ID of Instance
        Value: 
            !Ref NewEC2
        Export:
            Name: !Sub "${AWS::StackName}-EC2ID"

    EC2PRIVIP:
        Description: EC2 PRIV IP of Instance
        Value: 
            !GetAtt NewEC2.PrivateIp
        Export:
            Name: !Sub "${AWS::StackName}-EC2PRIVIP"
    
    EC2PUBIP:
        Description: EC2 PUB IP of Instance
        Value: 
            !GetAtt NewEC2.PublicIp
        Export:
            Name: !Sub "${AWS::StackName}-EC2PUBIP"